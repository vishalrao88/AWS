"use strict";
/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var apirequest_1 = require("../../lib/apirequest");
// TODO: We will eventually get the `any` in here cleared out, but in the
// interim we want to turn on no-implicit-any.
// tslint:disable: no-any
// tslint:disable: class-name
// tslint:disable: variable-name
// tslint:disable: jsdoc-format
// tslint:disable: no-namespace
var adexchangebuyer_v1_2;
(function (adexchangebuyer_v1_2) {
    /**
     * Ad Exchange Buyer API
     *
     * Accesses your bidding-account information, submits creatives for
     * validation, finds available direct deals, and retrieves performance
     * reports.
     *
     * @example
     * const google = require('googleapis');
     * const adexchangebuyer = google.adexchangebuyer('v1.2');
     *
     * @namespace adexchangebuyer
     * @type {Function}
     * @version v1.2
     * @variation v1.2
     * @param {object=} options Options for Adexchangebuyer
     */
    var Adexchangebuyer = /** @class */ (function () {
        function Adexchangebuyer(options, google) {
            this.root = this;
            this._options = options || {};
            this.google = google;
            this.getRoot.bind(this);
            this.accounts = new Resource$Accounts(this);
            this.creatives = new Resource$Creatives(this);
        }
        Adexchangebuyer.prototype.getRoot = function () {
            return this.root;
        };
        return Adexchangebuyer;
    }());
    adexchangebuyer_v1_2.Adexchangebuyer = Adexchangebuyer;
    var Resource$Accounts = /** @class */ (function () {
        function Resource$Accounts(root) {
            this.root = root;
            this.getRoot.bind(this);
        }
        Resource$Accounts.prototype.getRoot = function () {
            return this.root;
        };
        Resource$Accounts.prototype.get = function (paramsOrCallback, optionsOrCallback, callback) {
            var params = (paramsOrCallback || {});
            var options = (optionsOrCallback || {});
            if (typeof paramsOrCallback === 'function') {
                callback = paramsOrCallback;
                params = {};
                options = {};
            }
            if (typeof optionsOrCallback === 'function') {
                callback = optionsOrCallback;
                options = {};
            }
            var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
            var parameters = {
                options: Object.assign({
                    url: (rootUrl + '/adexchangebuyer/v1.2/accounts/{id}')
                        .replace(/([^:]\/)\/+/g, '$1'),
                    method: 'GET'
                }, options),
                params: params,
                requiredParams: ['id'],
                pathParams: ['id'],
                context: this.getRoot()
            };
            if (callback) {
                apirequest_1.createAPIRequest(parameters, callback);
            }
            else {
                return apirequest_1.createAPIRequest(parameters);
            }
        };
        Resource$Accounts.prototype.list = function (paramsOrCallback, optionsOrCallback, callback) {
            var params = (paramsOrCallback || {});
            var options = (optionsOrCallback || {});
            if (typeof paramsOrCallback === 'function') {
                callback = paramsOrCallback;
                params = {};
                options = {};
            }
            if (typeof optionsOrCallback === 'function') {
                callback = optionsOrCallback;
                options = {};
            }
            var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
            var parameters = {
                options: Object.assign({
                    url: (rootUrl + '/adexchangebuyer/v1.2/accounts')
                        .replace(/([^:]\/)\/+/g, '$1'),
                    method: 'GET'
                }, options),
                params: params,
                requiredParams: [],
                pathParams: [],
                context: this.getRoot()
            };
            if (callback) {
                apirequest_1.createAPIRequest(parameters, callback);
            }
            else {
                return apirequest_1.createAPIRequest(parameters);
            }
        };
        Resource$Accounts.prototype.patch = function (paramsOrCallback, optionsOrCallback, callback) {
            var params = (paramsOrCallback || {});
            var options = (optionsOrCallback || {});
            if (typeof paramsOrCallback === 'function') {
                callback = paramsOrCallback;
                params = {};
                options = {};
            }
            if (typeof optionsOrCallback === 'function') {
                callback = optionsOrCallback;
                options = {};
            }
            var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
            var parameters = {
                options: Object.assign({
                    url: (rootUrl + '/adexchangebuyer/v1.2/accounts/{id}')
                        .replace(/([^:]\/)\/+/g, '$1'),
                    method: 'PATCH'
                }, options),
                params: params,
                requiredParams: ['id'],
                pathParams: ['id'],
                context: this.getRoot()
            };
            if (callback) {
                apirequest_1.createAPIRequest(parameters, callback);
            }
            else {
                return apirequest_1.createAPIRequest(parameters);
            }
        };
        Resource$Accounts.prototype.update = function (paramsOrCallback, optionsOrCallback, callback) {
            var params = (paramsOrCallback || {});
            var options = (optionsOrCallback || {});
            if (typeof paramsOrCallback === 'function') {
                callback = paramsOrCallback;
                params = {};
                options = {};
            }
            if (typeof optionsOrCallback === 'function') {
                callback = optionsOrCallback;
                options = {};
            }
            var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
            var parameters = {
                options: Object.assign({
                    url: (rootUrl + '/adexchangebuyer/v1.2/accounts/{id}')
                        .replace(/([^:]\/)\/+/g, '$1'),
                    method: 'PUT'
                }, options),
                params: params,
                requiredParams: ['id'],
                pathParams: ['id'],
                context: this.getRoot()
            };
            if (callback) {
                apirequest_1.createAPIRequest(parameters, callback);
            }
            else {
                return apirequest_1.createAPIRequest(parameters);
            }
        };
        return Resource$Accounts;
    }());
    adexchangebuyer_v1_2.Resource$Accounts = Resource$Accounts;
    var Resource$Creatives = /** @class */ (function () {
        function Resource$Creatives(root) {
            this.root = root;
            this.getRoot.bind(this);
        }
        Resource$Creatives.prototype.getRoot = function () {
            return this.root;
        };
        Resource$Creatives.prototype.get = function (paramsOrCallback, optionsOrCallback, callback) {
            var params = (paramsOrCallback || {});
            var options = (optionsOrCallback || {});
            if (typeof paramsOrCallback === 'function') {
                callback = paramsOrCallback;
                params = {};
                options = {};
            }
            if (typeof optionsOrCallback === 'function') {
                callback = optionsOrCallback;
                options = {};
            }
            var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
            var parameters = {
                options: Object.assign({
                    url: (rootUrl +
                        '/adexchangebuyer/v1.2/creatives/{accountId}/{buyerCreativeId}')
                        .replace(/([^:]\/)\/+/g, '$1'),
                    method: 'GET'
                }, options),
                params: params,
                requiredParams: ['accountId', 'buyerCreativeId'],
                pathParams: ['accountId', 'buyerCreativeId'],
                context: this.getRoot()
            };
            if (callback) {
                apirequest_1.createAPIRequest(parameters, callback);
            }
            else {
                return apirequest_1.createAPIRequest(parameters);
            }
        };
        Resource$Creatives.prototype.insert = function (paramsOrCallback, optionsOrCallback, callback) {
            var params = (paramsOrCallback || {});
            var options = (optionsOrCallback || {});
            if (typeof paramsOrCallback === 'function') {
                callback = paramsOrCallback;
                params = {};
                options = {};
            }
            if (typeof optionsOrCallback === 'function') {
                callback = optionsOrCallback;
                options = {};
            }
            var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
            var parameters = {
                options: Object.assign({
                    url: (rootUrl + '/adexchangebuyer/v1.2/creatives')
                        .replace(/([^:]\/)\/+/g, '$1'),
                    method: 'POST'
                }, options),
                params: params,
                requiredParams: [],
                pathParams: [],
                context: this.getRoot()
            };
            if (callback) {
                apirequest_1.createAPIRequest(parameters, callback);
            }
            else {
                return apirequest_1.createAPIRequest(parameters);
            }
        };
        Resource$Creatives.prototype.list = function (paramsOrCallback, optionsOrCallback, callback) {
            var params = (paramsOrCallback || {});
            var options = (optionsOrCallback || {});
            if (typeof paramsOrCallback === 'function') {
                callback = paramsOrCallback;
                params = {};
                options = {};
            }
            if (typeof optionsOrCallback === 'function') {
                callback = optionsOrCallback;
                options = {};
            }
            var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
            var parameters = {
                options: Object.assign({
                    url: (rootUrl + '/adexchangebuyer/v1.2/creatives')
                        .replace(/([^:]\/)\/+/g, '$1'),
                    method: 'GET'
                }, options),
                params: params,
                requiredParams: [],
                pathParams: [],
                context: this.getRoot()
            };
            if (callback) {
                apirequest_1.createAPIRequest(parameters, callback);
            }
            else {
                return apirequest_1.createAPIRequest(parameters);
            }
        };
        return Resource$Creatives;
    }());
    adexchangebuyer_v1_2.Resource$Creatives = Resource$Creatives;
})(adexchangebuyer_v1_2 = exports.adexchangebuyer_v1_2 || (exports.adexchangebuyer_v1_2 = {}));
//# sourceMappingURL=v1.2.js.map